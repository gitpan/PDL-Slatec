# NOTE!
#
# Do not use index remapping with these functions when it 
# comes available: your nose will bleed.

# For my private use, remove if it bothers you
use blib "../pp";
use PDL::PP qw/PDL::Slatec PDL::Slatec Slatec/;


# SSVDC = singular value decomposition for floats.
# Writing these like this is probably too much work :(

addhdr('
#include "f2c.h"
#include "SlatecProtos.h"
');

defpdl(
	'svdc',
	'x(n,p,...); s(p,...); e(p,...); u(n,p,...);
	 v(p,p,...); work(n); int job(one); int info(one,...);
	 TYPES:FD
		',
	'',
	'
	 $TFD(ssvdc_,dsvdc_)
	  ($P(x),&n_size,&n_size,&p_size,$P(s),$P(e),$P(u), &n_size, $P(v), &p_size, $P(work), $P(job), $P(info));
	'
);

defpdl(
	'poco',
	'a(n,n,...); rcond(one,...); [o]z(n); int info(one,...); TYPES:FD',
	'',
	'$TFD(spoco_,dpoco_)
	 ($P(a),&n_size,&n_size,$P(rcond),$P(z),$P(info));'
);

defpdl(
	'podi',
	'a(n,n,...); int job(one); det(two); TYPES:FD',
	'',
	'$TFD(spodi_,dpodi_)
	 ($P(a),&n_size,&n_size,$P(det),$P(job));
/* Complete the inverse */
	 loop(n0,n1) %{
	 	if(n0<=n1) continue;
		$a(n0=>n0,n1=>n1) = $a(n0=>n1,n1=>n0);
	 %}
	 '
);

done();
